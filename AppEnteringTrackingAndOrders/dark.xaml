<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AppEnteringTrackingAndOrders">
    
    
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="Black" />
    </Style>

    <Style x:Key="ButtonStyleLeft" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15,0,0,15"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleRight" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,15,15,0"
                    Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleNo" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="ButtonStyleFull" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ButtonStyleFullGreen" TargetType="Button">
        <Setter Property="Background" Value="#FF70AB64" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15"
                            Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="ButtonStyleTopLeft" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15,0,0,0"
                            Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="ButtonStyleTopRight" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,15,0,0"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="ButtonStyleDownRight" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,0,15,0"
                    Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="ButtonStyleDownLeft" TargetType="Button">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,0,0,15"
                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonEnterLogin" TargetType="Button">
        <Setter Property="Background" Value="#FFC58A33" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15,15,15,15"
                    Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Анимация для MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                        <!-- Анимация для нажатия -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>

                        <!-- Анимация для IsEnabled (отключенное состояние) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackgroundGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="#2f3240" />
    </Style>

    <Style x:Key="BorderCenterLine" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="White"
                                          BlurRadius="8"
                                          ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderGray" TargetType="Border">
        <Setter Property="Background" Value="Gray"/>
    </Style>

    <Style x:Key="ButtonOrderItem" TargetType="Button">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <!-- <Setter Property="Padding" Value="10"/> Добавьте отступы, если нужно -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <Style x:Key="ButtonOrderItemModifier" TargetType="Button">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <!-- <Setter Property="Padding" Value="10"/> Добавьте отступы, если нужно -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <!-- Черточка слева -->
                            <Rectangle Width="2" 
                                   Height="80" 
                                   Fill="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   Margin="10,0,0,0"/>
                            <!-- Текст кнопки -->
                            <ContentPresenter HorizontalAlignment="Stretch" 
                                          VerticalAlignment="Stretch" 
                                          Margin="30,0,0,0"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <!-- Черточка слева -->
                                    <Rectangle Width="2" 
                                               Height="80" 
                                               Fill="#2f3240" 
                                               HorizontalAlignment="Left" 
                                               VerticalAlignment="Center" 
                                               Margin="10,0,0,0"/>
                                    <!-- Текст кнопки -->
                                    <ContentPresenter HorizontalAlignment="Stretch" 
                                                      VerticalAlignment="Stretch" 
                                                      Margin="30,0,0,0"
                                                      TextElement.Foreground="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>